#-----------------------------------------------------------
# Vivado v2024.2 (64-bit)
# SW Build 5239630 on Fri Nov 08 22:35:27 MST 2024
# IP Build 5239520 on Sun Nov 10 16:12:51 MST 2024
# SharedData Build 5239561 on Fri Nov 08 14:39:27 MST 2024
# Start of session at: Sat Apr 26 18:58:01 2025
# Process ID         : 15572
# Current directory  : C:/Users/benji/AppData/Roaming/Xilinx/Vivado
# Command line       : vivado.exe -gui_launcher_event rodinguilauncherevent13220
# Log file           : C:/Users/benji/AppData/Roaming/Xilinx/Vivado/vivado.log
# Journal file       : C:/Users/benji/AppData/Roaming/Xilinx/Vivado\vivado.jou
# Running On         : bipe_surface_v2
# Platform           : Windows Server 2016 or Windows 10
# Operating System   : 26100
# Processor Detail   : Intel(R) Core(TM) i5-1035G7 CPU @ 1.20GHz
# CPU Frequency      : 1498 MHz
# CPU Physical cores : 4
# CPU Logical cores  : 8
# Host memory        : 8155 MB
# Swap memory        : 8321 MB
# Total Virtual      : 16477 MB
# Available Virtual  : 5692 MB
#-----------------------------------------------------------
start_gui
open_project C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.xpr
update_compile_order -fileset sources_1
open_bd_design {C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd}
startgroup
set_property -dict [list \
  CONFIG.C_D_AXI {0} \
  CONFIG.C_D_LMB {1} \
  CONFIG.C_I_LMB {1} \
] [get_bd_cells microblaze_riscv_0]
delete_bd_objs [get_bd_intf_nets microblaze_riscv_0_M_AXI_DP]
endgroup
startgroup
set_property CONFIG.C_D_AXI {1} [get_bd_cells microblaze_riscv_0]
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/clk_wiz_1/clk_out1 (100 MHz)} Clk_slave {/clk_wiz_1/clk_out1 (100 MHz)} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/microblaze_riscv_0/M_AXI_DP} Slave {/axi_uartlite_0/S_AXI} ddr_seg {Auto} intc_ip {/axi_smc} master_apm {0}}  [get_bd_intf_pins microblaze_riscv_0/M_AXI_DP]
startgroup
set_property -dict [list \
  CONFIG.C_D_AXI {1} \
  CONFIG.C_D_LMB {0} \
  CONFIG.C_I_LMB {0} \
] [get_bd_cells microblaze_riscv_0]
delete_bd_objs [get_bd_intf_nets microblaze_riscv_0_dlmb_1] [get_bd_intf_nets microblaze_riscv_0_ilmb_1]
endgroup
delete_bd_objs [get_bd_nets rst_clk_wiz_1_100M_bus_struct_reset] [get_bd_cells microblaze_riscv_0_local_memory]
startgroup
set_property CONFIG.C_USE_DCACHE {1} [get_bd_cells microblaze_riscv_0]
endgroup
startgroup
set_property CONFIG.C_USE_DCACHE {0} [get_bd_cells microblaze_riscv_0]
endgroup
startgroup
set_property CONFIG.C_ENABLE_DISCRETE_PORTS {1} [get_bd_cells microblaze_riscv_0]
endgroup
startgroup
set_property -dict [list \
  CONFIG.C_ENABLE_DISCRETE_PORTS {0} \
  CONFIG.C_USE_ICACHE {1} \
] [get_bd_cells microblaze_riscv_0]
endgroup
startgroup
set_property -dict [list \
  CONFIG.C_D_AXI {0} \
  CONFIG.C_M_AXI_D_BUS_EXCEPTION {0} \
  CONFIG.C_USE_ICACHE {0} \
] [get_bd_cells microblaze_riscv_0]
delete_bd_objs [get_bd_intf_nets microblaze_riscv_0_M_AXI_DP]
endgroup
undo
undo
undo
undo
undo
undo
undo
regenerate_bd_layout
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
assign_bd_address
open_run impl_1
open_bd_design {C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd}
generate_target all [get_files  C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd]
catch { config_ip_cache -export [get_ips -all design_1_microblaze_riscv_0_0] }
catch { config_ip_cache -export [get_ips -all design_1_dlmb_bram_if_cntlr_0] }
catch { config_ip_cache -export [get_ips -all design_1_ilmb_bram_if_cntlr_0] }
catch { config_ip_cache -export [get_ips -all design_1_lmb_bram_0] }
catch { config_ip_cache -export [get_ips -all design_1_axi_smc_0] }
catch { config_ip_cache -export [get_ips -all design_1_blk_mem_gen_0_1] }
catch { config_ip_cache -export [get_ips -all design_1_axi_bram_ctrl_0_3] }
catch { [ delete_ip_run [get_ips -all design_1_axi_bram_ctrl_0_3] ] }
catch { config_ip_cache -export [get_ips -all design_1_axi_smc_1_2] }
catch { [ delete_ip_run [get_ips -all design_1_axi_smc_1_2] ] }
export_ip_user_files -of_objects [get_files C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd]
launch_runs design_1_axi_smc_0_synth_1 design_1_blk_mem_gen_0_1_synth_1 design_1_dlmb_bram_if_cntlr_0_synth_1 design_1_ilmb_bram_if_cntlr_0_synth_1 design_1_lmb_bram_0_synth_1 design_1_microblaze_riscv_0_0_synth_1 -jobs 4
wait_on_run design_1_axi_smc_0_synth_1
wait_on_run design_1_blk_mem_gen_0_1_synth_1
wait_on_run design_1_dlmb_bram_if_cntlr_0_synth_1
wait_on_run design_1_ilmb_bram_if_cntlr_0_synth_1
wait_on_run design_1_lmb_bram_0_synth_1
wait_on_run design_1_microblaze_riscv_0_0_synth_1
export_simulation -lib_map_path [list {modelsim=C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.cache/compile_simlib/modelsim} {questa=C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.cache/compile_simlib/questa} {riviera=C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.cache/compile_simlib/riviera} {activehdl=C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.cache/compile_simlib/activehdl}] -of_objects [get_files C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd] -directory C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.ip_user_files -ipstatic_source_dir C:/Users/benji/Downloads/project_2.xpr/project_2/project_2.ip_user_files/ipstatic -use_ip_compiled_libs -force -quiet
regenerate_bd_layout
regenerate_bd_layout
reset_run synth_1
launch_runs synth_1 -jobs 4
wait_on_run synth_1
launch_runs impl_1 -jobs 4
wait_on_run impl_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
write_hw_platform -fixed -include_bit -force -file C:/Users/benji/Downloads/project_2.xpr/project_2/design_1_wrapper.xsa
delete_bd_objs [get_bd_intf_nets axi_smc_M05_AXI] [get_bd_intf_nets axi_bram_ctrl_1_BRAM_PORTA] [get_bd_cells axi_bram_ctrl_1]
delete_bd_objs [get_bd_intf_nets axi_cdma_0_M_AXI] [get_bd_intf_nets axi_smc_1_M00_AXI] [get_bd_cells axi_smc_1]
startgroup
set_property CONFIG.NUM_SI {2} [get_bd_cells axi_smc]
endgroup
connect_bd_intf_net [get_bd_intf_pins axi_cdma_0/M_AXI] [get_bd_intf_pins axi_smc/S01_AXI]
regenerate_bd_layout
startgroup
set_property CONFIG.SINGLE_PORT_BRAM {0} [get_bd_cells axi_bram_ctrl_0]
endgroup
connect_bd_intf_net [get_bd_intf_pins axi_bram_ctrl_0/BRAM_PORTB] [get_bd_intf_pins blk_mem_gen_0/BRAM_PORTB]
connect_bd_intf_net [get_bd_intf_pins axi_bram_ctrl_0/S_AXI] [get_bd_intf_pins axi_smc/M05_AXI]
regenerate_bd_layout
save_bd_design
assign_bd_address
save_bd_design
regenerate_bd_layout
regenerate_bd_layout -routing
regenerate_bd_layout
reset_run synth_1
reset_run design_1_axi_smc_0_synth_1
reset_run design_1_axi_bram_ctrl_0_2_synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
reset_run design_1_microblaze_riscv_0_0_synth_1
reset_run design_1_myip_pong2_0_0_synth_1
reset_run design_1_SevenSegmentDecoder_0_0_synth_1
reset_run design_1_SevenSegmentDecoder_1_0_synth_1
reset_run design_1_ilmb_bram_if_cntlr_0_synth_1
reset_run design_1_dlmb_bram_if_cntlr_0_synth_1
reset_run design_1_lmb_bram_0_synth_1
reset_run design_1_axi_cdma_0_0_synth_1
reset_run design_1_blk_mem_gen_0_1_synth_1
launch_runs impl_1 -jobs 4
wait_on_run impl_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
write_hw_platform -fixed -include_bit -force -file C:/Users/benji/Downloads/project_2.xpr/project_2/design_1_wrapper.xsa
set_property range 16K [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_dlmb_bram_if_cntlr_Mem}]
set_property range 16K [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
save_bd_design
reset_run synth_1
launch_runs impl_1 -jobs 4
set_property range 8K [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
set_property range 8K [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_dlmb_bram_if_cntlr_Mem}]
set_property range 4K [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
set_property range 8K [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
set_property range 16K [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_dlmb_bram_if_cntlr_Mem}]
set_property range 16K [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
save_bd_design
startgroup
endgroup
launch_runs synth_1 -jobs 4
delete_bd_objs [get_bd_addr_segs] [get_bd_addr_segs -excluded]
assign_bd_address
save_bd_design
launch_runs synth_1 -jobs 4
wait_on_run synth_1
launch_runs impl_1 -jobs 4
wait_on_run impl_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
write_hw_platform -fixed -include_bit -force -file C:/Users/benji/Downloads/project_2.xpr/project_2/design_1_wrapper.xsa
regenerate_bd_layout
regenerate_bd_layout -routing
set_property range 16K [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_dlmb_bram_if_cntlr_Mem}]
set_property range 16K [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
set_property range 16K [get_bd_addr_segs {axi_cdma_0/Data/SEG_axi_bram_ctrl_0_Mem0}]
save_bd_design
regenerate_bd_layout
regenerate_bd_layout
regenerate_bd_layout -routing
reset_run synth_1
launch_runs synth_1 -jobs 4
save_bd_design
launch_runs synth_1 -jobs 4
set_property offset 0x42000000 [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_myip_pong2_0_reg0}]
undo
save_bd_design
launch_runs synth_1 -jobs 4
set_property offset 0x42000000 [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_myip_pong2_0_reg0}]
set_property offset 0x4000 [get_bd_addr_segs {microblaze_riscv_0/Data/SEG_dlmb_bram_if_cntlr_Mem}]
set_property offset 0x4000 [get_bd_addr_segs {microblaze_riscv_0/Instruction/SEG_ilmb_bram_if_cntlr_Mem}]
save_bd_design
launch_runs synth_1 -jobs 4
wait_on_run synth_1
launch_runs impl_1 -jobs 4
wait_on_run impl_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
wait_on_run impl_1
write_hw_platform -fixed -include_bit -force -file C:/Users/benji/Downloads/project_2.xpr/project_2/design_1_wrapper.xsa
regenerate_bd_layout
archive_project C:/Users/benji/Downloads/project_2.xpr/project_2_5.xpr.zip -temp_dir C:/Users/benji/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-15572-bipe_surface_v2 -force -include_local_ip_cache
